// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVAnchor) DeepCopyInto(out *AVAnchor) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVAnchor.
func (in *AVAnchor) DeepCopy() *AVAnchor {
	if in == nil {
		return nil
	}
	out := new(AVAnchor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVApiserver) DeepCopyInto(out *AVApiserver) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVApiserver.
func (in *AVApiserver) DeepCopy() *AVApiserver {
	if in == nil {
		return nil
	}
	out := new(AVApiserver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVBootstrap) DeepCopyInto(out *AVBootstrap) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVBootstrap.
func (in *AVBootstrap) DeepCopy() *AVBootstrap {
	if in == nil {
		return nil
	}
	out := new(AVBootstrap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVCephMgrModulesConfig) DeepCopyInto(out *AVCephMgrModulesConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVCephMgrModulesConfig.
func (in *AVCephMgrModulesConfig) DeepCopy() *AVCephMgrModulesConfig {
	if in == nil {
		return nil
	}
	out := new(AVCephMgrModulesConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVData) DeepCopyInto(out *AVData) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVData.
func (in *AVData) DeepCopy() *AVData {
	if in == nil {
		return nil
	}
	out := new(AVData)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVDependencies) DeepCopyInto(out *AVDependencies) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVDependencies.
func (in *AVDependencies) DeepCopy() *AVDependencies {
	if in == nil {
		return nil
	}
	out := new(AVDependencies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVEndpointAuth) DeepCopyInto(out *AVEndpointAuth) {
	*out = *in
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(AVTls)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVEndpointAuth.
func (in *AVEndpointAuth) DeepCopy() *AVEndpointAuth {
	if in == nil {
		return nil
	}
	out := new(AVEndpointAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVEndpointPort) DeepCopyInto(out *AVEndpointPort) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVEndpointPort.
func (in *AVEndpointPort) DeepCopy() *AVEndpointPort {
	if in == nil {
		return nil
	}
	out := new(AVEndpointPort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVEndpointType1) DeepCopyInto(out *AVEndpointType1) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(map[string]AVEndpointAuth)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]AVEndpointAuth, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
	if in.HostFqdnOverride != nil {
		in, out := &in.HostFqdnOverride, &out.HostFqdnOverride
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(map[string]ArmadaMapInt)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapInt, len(*in))
			for key, val := range *in {
				var outVal map[string]int
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapInt, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Scheme != nil {
		in, out := &in.Scheme, &out.Scheme
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVEndpointType1.
func (in *AVEndpointType1) DeepCopy() *AVEndpointType1 {
	if in == nil {
		return nil
	}
	out := new(AVEndpointType1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVEndpointType2) DeepCopyInto(out *AVEndpointType2) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(map[string]AVEndpointAuth)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]AVEndpointAuth, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
	if in.HostFqdnOverride != nil {
		in, out := &in.HostFqdnOverride, &out.HostFqdnOverride
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(map[string]ArmadaMapInt)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapInt, len(*in))
			for key, val := range *in {
				var outVal map[string]int
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapInt, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.StatefuleSet != nil {
		in, out := &in.StatefuleSet, &out.StatefuleSet
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVEndpointType2.
func (in *AVEndpointType2) DeepCopy() *AVEndpointType2 {
	if in == nil {
		return nil
	}
	out := new(AVEndpointType2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVEndpoints) DeepCopyInto(out *AVEndpoints) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Armada != nil {
		in, out := &in.Armada, &out.Armada
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.CephObjectStore != nil {
		in, out := &in.CephObjectStore, &out.CephObjectStore
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Cloudformation != nil {
		in, out := &in.Cloudformation, &out.Cloudformation
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Cloudwatch != nil {
		in, out := &in.Cloudwatch, &out.Cloudwatch
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.ComputeMetadata != nil {
		in, out := &in.ComputeMetadata, &out.ComputeMetadata
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.ComputeNovncProxy != nil {
		in, out := &in.ComputeNovncProxy, &out.ComputeNovncProxy
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Compute != nil {
		in, out := &in.Compute, &out.Compute
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.ComputeSpiceProxy != nil {
		in, out := &in.ComputeSpiceProxy, &out.ComputeSpiceProxy
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Deckhand != nil {
		in, out := &in.Deckhand, &out.Deckhand
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Elasticsearch != nil {
		in, out := &in.Elasticsearch, &out.Elasticsearch
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Fluentd != nil {
		in, out := &in.Fluentd, &out.Fluentd
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Grafana != nil {
		in, out := &in.Grafana, &out.Grafana
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.ImageRegistry != nil {
		in, out := &in.ImageRegistry, &out.ImageRegistry
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.KeyManager != nil {
		in, out := &in.KeyManager, &out.KeyManager
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Kibana != nil {
		in, out := &in.Kibana, &out.Kibana
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeControllerManager != nil {
		in, out := &in.KubeControllerManager, &out.KubeControllerManager
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Kubernetesprovisioner != nil {
		in, out := &in.Kubernetesprovisioner, &out.Kubernetesprovisioner
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeScheduler != nil {
		in, out := &in.KubeScheduler, &out.KubeScheduler
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeStateMetrics != nil {
		in, out := &in.KubeStateMetrics, &out.KubeStateMetrics
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Ldap != nil {
		in, out := &in.Ldap, &out.Ldap
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.MaasRegionUi != nil {
		in, out := &in.MaasRegionUi, &out.MaasRegionUi
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Nagios != nil {
		in, out := &in.Nagios, &out.Nagios
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeMetrics != nil {
		in, out := &in.NodeMetrics, &out.NodeMetrics
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectStore != nil {
		in, out := &in.ObjectStore, &out.ObjectStore
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Orchestration != nil {
		in, out := &in.Orchestration, &out.Orchestration
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Physicalprovisioner != nil {
		in, out := &in.Physicalprovisioner, &out.Physicalprovisioner
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.ProcessExporterMetrics != nil {
		in, out := &in.ProcessExporterMetrics, &out.ProcessExporterMetrics
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.PrometheusElasticsearchExporter != nil {
		in, out := &in.PrometheusElasticsearchExporter, &out.PrometheusElasticsearchExporter
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.PrometheusFluentdExporter != nil {
		in, out := &in.PrometheusFluentdExporter, &out.PrometheusFluentdExporter
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.PrometheusMysqlExporter != nil {
		in, out := &in.PrometheusMysqlExporter, &out.PrometheusMysqlExporter
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.PrometheusOpenstackExporter != nil {
		in, out := &in.PrometheusOpenstackExporter, &out.PrometheusOpenstackExporter
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.PrometheusRabbitmqExporter != nil {
		in, out := &in.PrometheusRabbitmqExporter, &out.PrometheusRabbitmqExporter
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Shipyard != nil {
		in, out := &in.Shipyard, &out.Shipyard
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Volumev2 != nil {
		in, out := &in.Volumev2, &out.Volumev2
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Volumev3 != nil {
		in, out := &in.Volumev3, &out.Volumev3
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.MaasDb != nil {
		in, out := &in.MaasDb, &out.MaasDb
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.OsloDbApi != nil {
		in, out := &in.OsloDbApi, &out.OsloDbApi
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.OsloDbCell0 != nil {
		in, out := &in.OsloDbCell0, &out.OsloDbCell0
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.OsloDb != nil {
		in, out := &in.OsloDb, &out.OsloDb
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.OsloDbSession != nil {
		in, out := &in.OsloDbSession, &out.OsloDbSession
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.OsloMessaging != nil {
		in, out := &in.OsloMessaging, &out.OsloMessaging
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlAirflowCeleryDb != nil {
		in, out := &in.PostgresqlAirflowCeleryDb, &out.PostgresqlAirflowCeleryDb
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlAirflowDb != nil {
		in, out := &in.PostgresqlAirflowDb, &out.PostgresqlAirflowDb
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.Postgresql != nil {
		in, out := &in.Postgresql, &out.Postgresql
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.PostgresqlShipyardDb != nil {
		in, out := &in.PostgresqlShipyardDb, &out.PostgresqlShipyardDb
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
	if in.CephMon != nil {
		in, out := &in.CephMon, &out.CephMon
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.CephMgr != nil {
		in, out := &in.CephMgr, &out.CephMgr
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Fluentbit != nil {
		in, out := &in.Fluentbit, &out.Fluentbit
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.MaasIngress != nil {
		in, out := &in.MaasIngress, &out.MaasIngress
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.MaasRegion != nil {
		in, out := &in.MaasRegion, &out.MaasRegion
		*out = new(AVEndpointType1)
		(*in).DeepCopyInto(*out)
	}
	if in.OsloCache != nil {
		in, out := &in.OsloCache, &out.OsloCache
		*out = new(AVEndpointType2)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVEndpoints.
func (in *AVEndpoints) DeepCopy() *AVEndpoints {
	if in == nil {
		return nil
	}
	out := new(AVEndpoints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVGlobal) DeepCopyInto(out *AVGlobal) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVGlobal.
func (in *AVGlobal) DeepCopy() *AVGlobal {
	if in == nil {
		return nil
	}
	out := new(AVGlobal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVImages) DeepCopyInto(out *AVImages) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVImages.
func (in *AVImages) DeepCopy() *AVImages {
	if in == nil {
		return nil
	}
	out := new(AVImages)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVJobs) DeepCopyInto(out *AVJobs) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVJobs.
func (in *AVJobs) DeepCopy() *AVJobs {
	if in == nil {
		return nil
	}
	out := new(AVJobs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVKubeService) DeepCopyInto(out *AVKubeService) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVKubeService.
func (in *AVKubeService) DeepCopy() *AVKubeService {
	if in == nil {
		return nil
	}
	out := new(AVKubeService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVLivenessprobe) DeepCopyInto(out *AVLivenessprobe) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVLivenessprobe.
func (in *AVLivenessprobe) DeepCopy() *AVLivenessprobe {
	if in == nil {
		return nil
	}
	out := new(AVLivenessprobe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVMonitoring) DeepCopyInto(out *AVMonitoring) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVMonitoring.
func (in *AVMonitoring) DeepCopy() *AVMonitoring {
	if in == nil {
		return nil
	}
	out := new(AVMonitoring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVNetworking) DeepCopyInto(out *AVNetworking) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVNetworking.
func (in *AVNetworking) DeepCopy() *AVNetworking {
	if in == nil {
		return nil
	}
	out := new(AVNetworking)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVNodes) DeepCopyInto(out *AVNodes) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVNodes.
func (in *AVNodes) DeepCopy() *AVNodes {
	if in == nil {
		return nil
	}
	out := new(AVNodes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPod) DeepCopyInto(out *AVPod) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(AVPodAffinity)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = new(AVPodEnv)
		**out = **in
	}
	if in.Lifecycle != nil {
		in, out := &in.Lifecycle, &out.Lifecycle
		*out = new(AVPodLifecycle)
		**out = **in
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make(map[string]int, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make(map[string]AVPodResources, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.SecurityContext != nil {
		in, out := &in.SecurityContext, &out.SecurityContext
		*out = new(AVPodSecurityContext)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPod.
func (in *AVPod) DeepCopy() *AVPod {
	if in == nil {
		return nil
	}
	out := new(AVPod)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodAffinity) DeepCopyInto(out *AVPodAffinity) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodAffinity.
func (in *AVPodAffinity) DeepCopy() *AVPodAffinity {
	if in == nil {
		return nil
	}
	out := new(AVPodAffinity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodEnv) DeepCopyInto(out *AVPodEnv) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodEnv.
func (in *AVPodEnv) DeepCopy() *AVPodEnv {
	if in == nil {
		return nil
	}
	out := new(AVPodEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodLifecycle) DeepCopyInto(out *AVPodLifecycle) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodLifecycle.
func (in *AVPodLifecycle) DeepCopy() *AVPodLifecycle {
	if in == nil {
		return nil
	}
	out := new(AVPodLifecycle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodReplicas) DeepCopyInto(out *AVPodReplicas) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodReplicas.
func (in *AVPodReplicas) DeepCopy() *AVPodReplicas {
	if in == nil {
		return nil
	}
	out := new(AVPodReplicas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodResourceCurator) DeepCopyInto(out *AVPodResourceCurator) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodResourceCurator.
func (in *AVPodResourceCurator) DeepCopy() *AVPodResourceCurator {
	if in == nil {
		return nil
	}
	out := new(AVPodResourceCurator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodResourceFluentbit) DeepCopyInto(out *AVPodResourceFluentbit) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodResourceFluentbit.
func (in *AVPodResourceFluentbit) DeepCopy() *AVPodResourceFluentbit {
	if in == nil {
		return nil
	}
	out := new(AVPodResourceFluentbit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodResourceImageRepoSync) DeepCopyInto(out *AVPodResourceImageRepoSync) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodResourceImageRepoSync.
func (in *AVPodResourceImageRepoSync) DeepCopy() *AVPodResourceImageRepoSync {
	if in == nil {
		return nil
	}
	out := new(AVPodResourceImageRepoSync)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodResourceSettings) DeepCopyInto(out *AVPodResourceSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodResourceSettings.
func (in *AVPodResourceSettings) DeepCopy() *AVPodResourceSettings {
	if in == nil {
		return nil
	}
	out := new(AVPodResourceSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodResourceSnapshotRepository) DeepCopyInto(out *AVPodResourceSnapshotRepository) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodResourceSnapshotRepository.
func (in *AVPodResourceSnapshotRepository) DeepCopy() *AVPodResourceSnapshotRepository {
	if in == nil {
		return nil
	}
	out := new(AVPodResourceSnapshotRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodResourceTest) DeepCopyInto(out *AVPodResourceTest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodResourceTest.
func (in *AVPodResourceTest) DeepCopy() *AVPodResourceTest {
	if in == nil {
		return nil
	}
	out := new(AVPodResourceTest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodResources) DeepCopyInto(out *AVPodResources) {
	*out = *in
	if in.Curator != nil {
		in, out := &in.Curator, &out.Curator
		*out = new(AVPodResourceCurator)
		**out = **in
	}
	if in.Fluentbit != nil {
		in, out := &in.Fluentbit, &out.Fluentbit
		*out = new(AVPodResourceFluentbit)
		**out = **in
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = new(AVPodResourceSettings)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = new(AVPodResourceSettings)
		**out = **in
	}
	if in.ImageRepoSync != nil {
		in, out := &in.ImageRepoSync, &out.ImageRepoSync
		*out = new(AVPodResourceImageRepoSync)
		**out = **in
	}
	if in.SnapshortRepository != nil {
		in, out := &in.SnapshortRepository, &out.SnapshortRepository
		*out = new(AVPodResourceSnapshotRepository)
		**out = **in
	}
	if in.Tests != nil {
		in, out := &in.Tests, &out.Tests
		*out = new(AVPodResourceTest)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodResources.
func (in *AVPodResources) DeepCopy() *AVPodResources {
	if in == nil {
		return nil
	}
	out := new(AVPodResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVPodSecurityContext) DeepCopyInto(out *AVPodSecurityContext) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVPodSecurityContext.
func (in *AVPodSecurityContext) DeepCopy() *AVPodSecurityContext {
	if in == nil {
		return nil
	}
	out := new(AVPodSecurityContext)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVSecretAnchor) DeepCopyInto(out *AVSecretAnchor) {
	*out = *in
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(AVTls)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVSecretAnchor.
func (in *AVSecretAnchor) DeepCopy() *AVSecretAnchor {
	if in == nil {
		return nil
	}
	out := new(AVSecretAnchor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVSecretEtcd) DeepCopyInto(out *AVSecretEtcd) {
	*out = *in
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(AVTls)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVSecretEtcd.
func (in *AVSecretEtcd) DeepCopy() *AVSecretEtcd {
	if in == nil {
		return nil
	}
	out := new(AVSecretEtcd)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVSecretKeyrings) DeepCopyInto(out *AVSecretKeyrings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVSecretKeyrings.
func (in *AVSecretKeyrings) DeepCopy() *AVSecretKeyrings {
	if in == nil {
		return nil
	}
	out := new(AVSecretKeyrings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVSecretMaasRegion) DeepCopyInto(out *AVSecretMaasRegion) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVSecretMaasRegion.
func (in *AVSecretMaasRegion) DeepCopy() *AVSecretMaasRegion {
	if in == nil {
		return nil
	}
	out := new(AVSecretMaasRegion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVSecretServiceAccount) DeepCopyInto(out *AVSecretServiceAccount) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVSecretServiceAccount.
func (in *AVSecretServiceAccount) DeepCopy() *AVSecretServiceAccount {
	if in == nil {
		return nil
	}
	out := new(AVSecretServiceAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVSecrets) DeepCopyInto(out *AVSecrets) {
	*out = *in
	if in.Anchor != nil {
		in, out := &in.Anchor, &out.Anchor
		*out = new(AVSecretAnchor)
		(*in).DeepCopyInto(*out)
	}
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(AVSecretEtcd)
		(*in).DeepCopyInto(*out)
	}
	if in.Keyrings != nil {
		in, out := &in.Keyrings, &out.Keyrings
		*out = new(AVSecretKeyrings)
		**out = **in
	}
	if in.MaasRegion != nil {
		in, out := &in.MaasRegion, &out.MaasRegion
		*out = new(AVSecretMaasRegion)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(AVSecretServiceAccount)
		**out = **in
	}
	if in.Tls != nil {
		in, out := &in.Tls, &out.Tls
		*out = new(AVTls)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVSecrets.
func (in *AVSecrets) DeepCopy() *AVSecrets {
	if in == nil {
		return nil
	}
	out := new(AVSecrets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVStorage) DeepCopyInto(out *AVStorage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVStorage.
func (in *AVStorage) DeepCopy() *AVStorage {
	if in == nil {
		return nil
	}
	out := new(AVStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVStorageclass) DeepCopyInto(out *AVStorageclass) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVStorageclass.
func (in *AVStorageclass) DeepCopy() *AVStorageclass {
	if in == nil {
		return nil
	}
	out := new(AVStorageclass)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVTls) DeepCopyInto(out *AVTls) {
	*out = *in
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(AVTlsCa)
		**out = **in
	}
	if in.Peer != nil {
		in, out := &in.Peer, &out.Peer
		*out = new(AVTlsCa)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVTls.
func (in *AVTls) DeepCopy() *AVTls {
	if in == nil {
		return nil
	}
	out := new(AVTls)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVTlsCa) DeepCopyInto(out *AVTlsCa) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVTlsCa.
func (in *AVTlsCa) DeepCopy() *AVTlsCa {
	if in == nil {
		return nil
	}
	out := new(AVTlsCa)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVVolume) DeepCopyInto(out *AVVolume) {
	*out = *in
	if in.ChownOnStart != nil {
		in, out := &in.ChownOnStart, &out.ChownOnStart
		*out = new(bool)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(AVVolumeBackup)
		(*in).DeepCopyInto(*out)
	}
	if in.ClassName != nil {
		in, out := &in.ClassName, &out.ClassName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVVolume.
func (in *AVVolume) DeepCopy() *AVVolume {
	if in == nil {
		return nil
	}
	out := new(AVVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AVVolumeBackup) DeepCopyInto(out *AVVolumeBackup) {
	*out = *in
	if in.ClassName != nil {
		in, out := &in.ClassName, &out.ClassName
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AVVolumeBackup.
func (in *AVVolumeBackup) DeepCopy() *AVVolumeBackup {
	if in == nil {
		return nil
	}
	out := new(AVVolumeBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaBackup) DeepCopyInto(out *ArmadaBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaBackup.
func (in *ArmadaBackup) DeepCopy() *ArmadaBackup {
	if in == nil {
		return nil
	}
	out := new(ArmadaBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaBackupList) DeepCopyInto(out *ArmadaBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArmadaBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaBackupList.
func (in *ArmadaBackupList) DeepCopy() *ArmadaBackupList {
	if in == nil {
		return nil
	}
	out := new(ArmadaBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaBackupSpec) DeepCopyInto(out *ArmadaBackupSpec) {
	*out = *in
	if in.ArmadaEndpoints != nil {
		in, out := &in.ArmadaEndpoints, &out.ArmadaEndpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = new(BackupPolicy)
		**out = **in
	}
	in.BackupSource.DeepCopyInto(&out.BackupSource)
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaBackupSpec.
func (in *ArmadaBackupSpec) DeepCopy() *ArmadaBackupSpec {
	if in == nil {
		return nil
	}
	out := new(ArmadaBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaBackupStatus) DeepCopyInto(out *ArmadaBackupStatus) {
	*out = *in
	in.ArmadaStatus.DeepCopyInto(&out.ArmadaStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaBackupStatus.
func (in *ArmadaBackupStatus) DeepCopy() *ArmadaBackupStatus {
	if in == nil {
		return nil
	}
	out := new(ArmadaBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChart) DeepCopyInto(out *ArmadaChart) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChart.
func (in *ArmadaChart) DeepCopy() *ArmadaChart {
	if in == nil {
		return nil
	}
	out := new(ArmadaChart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaChart) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartGroup) DeepCopyInto(out *ArmadaChartGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartGroup.
func (in *ArmadaChartGroup) DeepCopy() *ArmadaChartGroup {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaChartGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartGroupList) DeepCopyInto(out *ArmadaChartGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArmadaChartGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartGroupList.
func (in *ArmadaChartGroupList) DeepCopy() *ArmadaChartGroupList {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaChartGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartGroupSpec) DeepCopyInto(out *ArmadaChartGroupSpec) {
	*out = *in
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RevisionHistoryLimit != nil {
		in, out := &in.RevisionHistoryLimit, &out.RevisionHistoryLimit
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartGroupSpec.
func (in *ArmadaChartGroupSpec) DeepCopy() *ArmadaChartGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartGroupStatus) DeepCopyInto(out *ArmadaChartGroupStatus) {
	*out = *in
	in.ArmadaStatus.DeepCopyInto(&out.ArmadaStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartGroupStatus.
func (in *ArmadaChartGroupStatus) DeepCopy() *ArmadaChartGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartGroups) DeepCopyInto(out *ArmadaChartGroups) {
	*out = *in
	if in.List != nil {
		in, out := &in.List, &out.List
		*out = new(ArmadaChartGroupList)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartGroups.
func (in *ArmadaChartGroups) DeepCopy() *ArmadaChartGroups {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartGroups)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartList) DeepCopyInto(out *ArmadaChartList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArmadaChart, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartList.
func (in *ArmadaChartList) DeepCopy() *ArmadaChartList {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaChartList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartSource) DeepCopyInto(out *ArmadaChartSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartSource.
func (in *ArmadaChartSource) DeepCopy() *ArmadaChartSource {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartSpec) DeepCopyInto(out *ArmadaChartSpec) {
	*out = *in
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(ArmadaChartSource)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(ArmadaChartValues)
		(*in).DeepCopyInto(*out)
	}
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = new(ArmadaDelete)
		**out = **in
	}
	if in.Upgrade != nil {
		in, out := &in.Upgrade, &out.Upgrade
		*out = new(ArmadaUpgrade)
		(*in).DeepCopyInto(*out)
	}
	if in.Protected != nil {
		in, out := &in.Protected, &out.Protected
		*out = new(ArmadaProtectedRelease)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = new(ArmadaTest)
		(*in).DeepCopyInto(*out)
	}
	if in.Wait != nil {
		in, out := &in.Wait, &out.Wait
		*out = new(ArmadaWait)
		(*in).DeepCopyInto(*out)
	}
	if in.RevisionHistoryLimit != nil {
		in, out := &in.RevisionHistoryLimit, &out.RevisionHistoryLimit
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartSpec.
func (in *ArmadaChartSpec) DeepCopy() *ArmadaChartSpec {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartStatus) DeepCopyInto(out *ArmadaChartStatus) {
	*out = *in
	in.ArmadaStatus.DeepCopyInto(&out.ArmadaStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartStatus.
func (in *ArmadaChartStatus) DeepCopy() *ArmadaChartStatus {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaChartValues) DeepCopyInto(out *ArmadaChartValues) {
	*out = *in
	if in.Anchor != nil {
		in, out := &in.Anchor, &out.Anchor
		*out = new(AVAnchor)
		**out = **in
	}
	if in.Apiserver != nil {
		in, out := &in.Apiserver, &out.Apiserver
		*out = new(AVApiserver)
		**out = **in
	}
	if in.Bootstrap != nil {
		in, out := &in.Bootstrap, &out.Bootstrap
		*out = new(AVBootstrap)
		**out = **in
	}
	if in.Bootstrapping != nil {
		in, out := &in.Bootstrapping, &out.Bootstrapping
		*out = new(map[string]ArmadaMapString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapString, len(*in))
			for key, val := range *in {
				var outVal map[string]string
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapString, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.CephClient != nil {
		in, out := &in.CephClient, &out.CephClient
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.CephMgrModulesConfig != nil {
		in, out := &in.CephMgrModulesConfig, &out.CephMgrModulesConfig
		*out = new(AVCephMgrModulesConfig)
		**out = **in
	}
	if in.CommandPrefix != nil {
		in, out := &in.CommandPrefix, &out.CommandPrefix
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Conf != nil {
		in, out := &in.Conf, &out.Conf
		*out = new(map[string]ArmadaMapString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapString, len(*in))
			for key, val := range *in {
				var outVal map[string]string
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapString, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(AVData)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = new(AVDependencies)
		**out = **in
	}
	if in.Deployment != nil {
		in, out := &in.Deployment, &out.Deployment
		*out = new(map[string]bool)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]bool, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(map[string]ArmadaMapString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapString, len(*in))
			for key, val := range *in {
				var outVal map[string]string
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapString, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = new(AVEndpoints)
		(*in).DeepCopyInto(*out)
	}
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = new(AVImages)
		(*in).DeepCopyInto(*out)
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(AVGlobal)
		**out = **in
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = new(AVJobs)
		**out = **in
	}
	if in.KubeService != nil {
		in, out := &in.KubeService, &out.KubeService
		*out = new(AVKubeService)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]ArmadaMapString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapString, len(*in))
			for key, val := range *in {
				var outVal map[string]string
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapString, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Livenessprobe != nil {
		in, out := &in.Livenessprobe, &out.Livenessprobe
		*out = new(AVLivenessprobe)
		**out = **in
	}
	if in.Manifests != nil {
		in, out := &in.Manifests, &out.Manifests
		*out = new(map[string]bool)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]bool, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(AVMonitoring)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(map[string]ArmadaMapString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapString, len(*in))
			for key, val := range *in {
				var outVal map[string]string
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapString, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Networking != nil {
		in, out := &in.Networking, &out.Networking
		*out = new(AVNetworking)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]AVNodes, len(*in))
		copy(*out, *in)
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(AVPod)
		(*in).DeepCopyInto(*out)
	}
	if in.ProdEnvironment != nil {
		in, out := &in.ProdEnvironment, &out.ProdEnvironment
		*out = new(bool)
		**out = **in
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(map[string]int)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]int, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = new(AVSecrets)
		(*in).DeepCopyInto(*out)
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(map[string]ArmadaMapString)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ArmadaMapString, len(*in))
			for key, val := range *in {
				var outVal map[string]string
				if val == nil {
					(*out)[key] = nil
				} else {
					in, out := &val, &outVal
					*out = make(ArmadaMapString, len(*in))
					for key, val := range *in {
						(*out)[key] = val
					}
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(AVStorage)
		**out = **in
	}
	if in.Storageclass != nil {
		in, out := &in.Storageclass, &out.Storageclass
		*out = new(AVStorageclass)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(AVVolume)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaChartValues.
func (in *ArmadaChartValues) DeepCopy() *ArmadaChartValues {
	if in == nil {
		return nil
	}
	out := new(ArmadaChartValues)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaCharts) DeepCopyInto(out *ArmadaCharts) {
	*out = *in
	if in.List != nil {
		in, out := &in.List, &out.List
		*out = new(ArmadaChartList)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaCharts.
func (in *ArmadaCharts) DeepCopy() *ArmadaCharts {
	if in == nil {
		return nil
	}
	out := new(ArmadaCharts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaDelete) DeepCopyInto(out *ArmadaDelete) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaDelete.
func (in *ArmadaDelete) DeepCopy() *ArmadaDelete {
	if in == nil {
		return nil
	}
	out := new(ArmadaDelete)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaHookActionItems) DeepCopyInto(out *ArmadaHookActionItems) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaHookActionItems.
func (in *ArmadaHookActionItems) DeepCopy() *ArmadaHookActionItems {
	if in == nil {
		return nil
	}
	out := new(ArmadaHookActionItems)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaManifest) DeepCopyInto(out *ArmadaManifest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaManifest.
func (in *ArmadaManifest) DeepCopy() *ArmadaManifest {
	if in == nil {
		return nil
	}
	out := new(ArmadaManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaManifest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaManifestList) DeepCopyInto(out *ArmadaManifestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArmadaManifest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaManifestList.
func (in *ArmadaManifestList) DeepCopy() *ArmadaManifestList {
	if in == nil {
		return nil
	}
	out := new(ArmadaManifestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaManifestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaManifestSpec) DeepCopyInto(out *ArmadaManifestSpec) {
	*out = *in
	if in.ChartGroups != nil {
		in, out := &in.ChartGroups, &out.ChartGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RevisionHistoryLimit != nil {
		in, out := &in.RevisionHistoryLimit, &out.RevisionHistoryLimit
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaManifestSpec.
func (in *ArmadaManifestSpec) DeepCopy() *ArmadaManifestSpec {
	if in == nil {
		return nil
	}
	out := new(ArmadaManifestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaManifestStatus) DeepCopyInto(out *ArmadaManifestStatus) {
	*out = *in
	in.ArmadaStatus.DeepCopyInto(&out.ArmadaStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaManifestStatus.
func (in *ArmadaManifestStatus) DeepCopy() *ArmadaManifestStatus {
	if in == nil {
		return nil
	}
	out := new(ArmadaManifestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaProtectedRelease) DeepCopyInto(out *ArmadaProtectedRelease) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaProtectedRelease.
func (in *ArmadaProtectedRelease) DeepCopy() *ArmadaProtectedRelease {
	if in == nil {
		return nil
	}
	out := new(ArmadaProtectedRelease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaRestore) DeepCopyInto(out *ArmadaRestore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaRestore.
func (in *ArmadaRestore) DeepCopy() *ArmadaRestore {
	if in == nil {
		return nil
	}
	out := new(ArmadaRestore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaRestore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaRestoreList) DeepCopyInto(out *ArmadaRestoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ArmadaRestore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaRestoreList.
func (in *ArmadaRestoreList) DeepCopy() *ArmadaRestoreList {
	if in == nil {
		return nil
	}
	out := new(ArmadaRestoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ArmadaRestoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaRestoreSpec) DeepCopyInto(out *ArmadaRestoreSpec) {
	*out = *in
	in.RestoreSource.DeepCopyInto(&out.RestoreSource)
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaRestoreSpec.
func (in *ArmadaRestoreSpec) DeepCopy() *ArmadaRestoreSpec {
	if in == nil {
		return nil
	}
	out := new(ArmadaRestoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaRestoreStatus) DeepCopyInto(out *ArmadaRestoreStatus) {
	*out = *in
	in.ArmadaStatus.DeepCopyInto(&out.ArmadaStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaRestoreStatus.
func (in *ArmadaRestoreStatus) DeepCopy() *ArmadaRestoreStatus {
	if in == nil {
		return nil
	}
	out := new(ArmadaRestoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaStatus) DeepCopyInto(out *ArmadaStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]HelmResourceCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaStatus.
func (in *ArmadaStatus) DeepCopy() *ArmadaStatus {
	if in == nil {
		return nil
	}
	out := new(ArmadaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaTest) DeepCopyInto(out *ArmadaTest) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(ArmadaTestOptions)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaTest.
func (in *ArmadaTest) DeepCopy() *ArmadaTest {
	if in == nil {
		return nil
	}
	out := new(ArmadaTest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaTestOptions) DeepCopyInto(out *ArmadaTestOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaTestOptions.
func (in *ArmadaTestOptions) DeepCopy() *ArmadaTestOptions {
	if in == nil {
		return nil
	}
	out := new(ArmadaTestOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaUpgrade) DeepCopyInto(out *ArmadaUpgrade) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(ArmadaUpgradeOptions)
		**out = **in
	}
	if in.Post != nil {
		in, out := &in.Post, &out.Post
		*out = new(ArmadaUpgradePost)
		(*in).DeepCopyInto(*out)
	}
	if in.Pre != nil {
		in, out := &in.Pre, &out.Pre
		*out = new(ArmadaUpgradePre)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaUpgrade.
func (in *ArmadaUpgrade) DeepCopy() *ArmadaUpgrade {
	if in == nil {
		return nil
	}
	out := new(ArmadaUpgrade)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaUpgradeOptions) DeepCopyInto(out *ArmadaUpgradeOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaUpgradeOptions.
func (in *ArmadaUpgradeOptions) DeepCopy() *ArmadaUpgradeOptions {
	if in == nil {
		return nil
	}
	out := new(ArmadaUpgradeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaUpgradePost) DeepCopyInto(out *ArmadaUpgradePost) {
	*out = *in
	if in.Create != nil {
		in, out := &in.Create, &out.Create
		*out = make([]*ArmadaHookActionItems, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ArmadaHookActionItems)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaUpgradePost.
func (in *ArmadaUpgradePost) DeepCopy() *ArmadaUpgradePost {
	if in == nil {
		return nil
	}
	out := new(ArmadaUpgradePost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaUpgradePre) DeepCopyInto(out *ArmadaUpgradePre) {
	*out = *in
	if in.Create != nil {
		in, out := &in.Create, &out.Create
		*out = make([]*ArmadaHookActionItems, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ArmadaHookActionItems)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = make([]*ArmadaHookActionItems, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ArmadaHookActionItems)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Update != nil {
		in, out := &in.Update, &out.Update
		*out = make([]*ArmadaHookActionItems, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ArmadaHookActionItems)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaUpgradePre.
func (in *ArmadaUpgradePre) DeepCopy() *ArmadaUpgradePre {
	if in == nil {
		return nil
	}
	out := new(ArmadaUpgradePre)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaWait) DeepCopyInto(out *ArmadaWait) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Native != nil {
		in, out := &in.Native, &out.Native
		*out = new(ArmadaWaitNative)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*ArmadaWaitResourcesItems, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ArmadaWaitResourcesItems)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaWait.
func (in *ArmadaWait) DeepCopy() *ArmadaWait {
	if in == nil {
		return nil
	}
	out := new(ArmadaWait)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaWaitNative) DeepCopyInto(out *ArmadaWaitNative) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaWaitNative.
func (in *ArmadaWaitNative) DeepCopy() *ArmadaWaitNative {
	if in == nil {
		return nil
	}
	out := new(ArmadaWaitNative)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArmadaWaitResourcesItems) DeepCopyInto(out *ArmadaWaitResourcesItems) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArmadaWaitResourcesItems.
func (in *ArmadaWaitResourcesItems) DeepCopy() *ArmadaWaitResourcesItems {
	if in == nil {
		return nil
	}
	out := new(ArmadaWaitResourcesItems)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicy) DeepCopyInto(out *BackupPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicy.
func (in *BackupPolicy) DeepCopy() *BackupPolicy {
	if in == nil {
		return nil
	}
	out := new(BackupPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSource) DeepCopyInto(out *BackupSource) {
	*out = *in
	if in.Offsite != nil {
		in, out := &in.Offsite, &out.Offsite
		*out = new(OffsiteBackupSource)
		**out = **in
	}
	if in.Ceph != nil {
		in, out := &in.Ceph, &out.Ceph
		*out = new(CephBackupSource)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSource.
func (in *BackupSource) DeepCopy() *BackupSource {
	if in == nil {
		return nil
	}
	out := new(BackupSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CephBackupSource) DeepCopyInto(out *CephBackupSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CephBackupSource.
func (in *CephBackupSource) DeepCopy() *CephBackupSource {
	if in == nil {
		return nil
	}
	out := new(CephBackupSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CephRestoreSource) DeepCopyInto(out *CephRestoreSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CephRestoreSource.
func (in *CephRestoreSource) DeepCopy() *CephRestoreSource {
	if in == nil {
		return nil
	}
	out := new(CephRestoreSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControllerRevision) DeepCopyInto(out *ControllerRevision) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Data.DeepCopyInto(&out.Data)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControllerRevision.
func (in *ControllerRevision) DeepCopy() *ControllerRevision {
	if in == nil {
		return nil
	}
	out := new(ControllerRevision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ControllerRevision) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ControllerRevisionList) DeepCopyInto(out *ControllerRevisionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ControllerRevision, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ControllerRevisionList.
func (in *ControllerRevisionList) DeepCopy() *ControllerRevisionList {
	if in == nil {
		return nil
	}
	out := new(ControllerRevisionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ControllerRevisionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmResourceCondition) DeepCopyInto(out *HelmResourceCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmResourceCondition.
func (in *HelmResourceCondition) DeepCopy() *HelmResourceCondition {
	if in == nil {
		return nil
	}
	out := new(HelmResourceCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmResourceConditionListHelper) DeepCopyInto(out *HelmResourceConditionListHelper) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HelmResourceCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmResourceConditionListHelper.
func (in *HelmResourceConditionListHelper) DeepCopy() *HelmResourceConditionListHelper {
	if in == nil {
		return nil
	}
	out := new(HelmResourceConditionListHelper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffsiteBackupSource) DeepCopyInto(out *OffsiteBackupSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffsiteBackupSource.
func (in *OffsiteBackupSource) DeepCopy() *OffsiteBackupSource {
	if in == nil {
		return nil
	}
	out := new(OffsiteBackupSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OffsiteRestoreSource) DeepCopyInto(out *OffsiteRestoreSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OffsiteRestoreSource.
func (in *OffsiteRestoreSource) DeepCopy() *OffsiteRestoreSource {
	if in == nil {
		return nil
	}
	out := new(OffsiteRestoreSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreSource) DeepCopyInto(out *RestoreSource) {
	*out = *in
	if in.Offsite != nil {
		in, out := &in.Offsite, &out.Offsite
		*out = new(OffsiteRestoreSource)
		**out = **in
	}
	if in.Ceph != nil {
		in, out := &in.Ceph, &out.Ceph
		*out = new(CephRestoreSource)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreSource.
func (in *RestoreSource) DeepCopy() *RestoreSource {
	if in == nil {
		return nil
	}
	out := new(RestoreSource)
	in.DeepCopyInto(out)
	return out
}
