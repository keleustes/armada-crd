
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: upgradephases.openstacklcm.airshipit.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.actualState
    description: State
    name: State
    type: string
  - JSONPath: .spec.targetState
    description: Target State
    name: Target State
    type: string
  - JSONPath: .status.satisfied
    description: Satisfied
    name: Satisfied
    type: boolean
  group: openstacklcm.airshipit.org
  names:
    kind: UpgradePhase
    listKind: UpgradePhaseList
    plural: upgradephases
    shortNames:
    - osupg
    singular: upgradephase
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: UpgradePhase is the Schema for the openstackdeployments API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: UpgradePhaseSpec defines the desired state of UpgradePhase
          properties:
            backupDB:
              description: Should we also backup the database before upgrade
              type: string
            backupPolicy:
              description: BackupPolicy configures the backup process.
              properties:
                timeoutInSecond:
                  description: TimeoutInSecond is the maximal allowed time in second
                    of the entire backup process.
                  format: int64
                  type: integer
              type: object
            ceph:
              description: Ceph defines the Ceph backup source spec.
              properties:
                cephSecret:
                  description: "The name of the secret object that stores the Google
                    storage credential containing at most ONE of the following: An
                    access token with file name of 'access-token'. JSON credentials
                    with file name of 'credentials.json'. \n If omitted, client will
                    use the default application credentials."
                  type: string
                path:
                  description: 'Path is the full Ceph path where the backup is saved.
                    The format of the path must be: "<ceph-bucket-name>/<path-to-backup-file>"
                    e.g: "mycephbucket/armada.backup"'
                  type: string
              required:
              - path
              type: object
            config:
              additionalProperties:
                type: string
              description: Config is the set of extra Values added to the helm renderer.
                Config map[string]interface{} `json:"config,omitempty"`
              type: object
            offsite:
              description: Offsite defines the Offsite backup source spec.
              properties:
                endpoint:
                  description: Endpoint if blank points to offsite. If specified,
                    can point to offsite compatible object stores.
                  type: string
                forcePathStyle:
                  description: ForcePathStyle forces to use path style over the default
                    subdomain style. This is useful when you have an offsite compatible
                    endpoint that doesn't support subdomain buckets.
                  type: boolean
                offsiteSecret:
                  description: "The name of the secret object that stores the Offsite
                    credential and config files. The file name of the credential MUST
                    be 'credentials'. The file name of the config MUST be 'config'.
                    The profile to use in both files will be 'default'. \n OffsiteSecret
                    overwrites the default armada operator wide Offsite credential
                    and config."
                  type: string
                path:
                  description: 'Path is the full offsite path where the backup is
                    saved. The format of the path must be: "<offsite-bucket-name>/<path-to-backup-file>"
                    e.g: "mybucket/armada.backup"'
                  type: string
              required:
              - forcePathStyle
              - offsiteSecret
              - path
              type: object
            openstackServiceEndPoint:
              description: Openstack Service EndPoint
              type: string
            openstackServiceName:
              description: Openstack Service Name
              type: string
            source:
              description: provide a path to a ``git repo``, ``local dir``, or ``tarball
                url`` chart
              properties:
                location:
                  description: '``url`` or ``path`` to the chart''s parent directory'
                  type: string
                type:
                  description: 'source to build the chart: ``git``, ``local``, or
                    ``tar``'
                  type: string
              required:
              - location
              - type
              type: object
            storageType:
              description: StorageType is the armada backup storage type. We need
                this field because CRD doesn't support validation against invalid
                fields and we cannot verify invalid backup storage source.
              type: string
            targetOpenstackServiceVersion:
              description: OpenstackServiceVersion is the version of the openstack
                service.
              type: string
            targetState:
              description: Target state of the Lcm Custom Resources
              type: string
          required:
          - openstackServiceName
          - source
          - targetState
          type: object
        status:
          description: UpgradePhaseStatus defines the observed state of UpgradePhase
          properties:
            actualOpenstackServiceVersion:
              description: OpenstackVersion is the version of the backup openstack
                server.
              type: string
            actualState:
              description: Actual state of the Lcm Custom Resources
              type: string
            conditions:
              description: 'List of conditions and states related to the resource.
                JEB: Feature kind of overlap with event recorder'
              items:
                description: LcmResourceCondition represents one current condition
                  of an Lcm resource A condition might not show up if it is not happening.
                  For example, if a chart is not deploying, the Deploying condition
                  would not show up. If a chart is deploying and encountered a problem
                  that prevents the deployment, the Deploying condition's status will
                  would be False and communicate the problem back.
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  resourceName:
                    type: string
                  resourceVersion:
                    format: int32
                    type: integer
                  status:
                    description: LcmResourceConditionStatus represents the current
                      status of a Condition
                    type: string
                  type:
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            reason:
              description: Reason indicates the reason for any related failures.
              type: string
            satisfied:
              description: Succeeded indicates if the release's ActualState satisfies
                its target state
              type: boolean
          required:
          - actualState
          - satisfied
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
